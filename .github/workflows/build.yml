name: build

on:
    push:
        branches: [master]
    pull_request:
        branches: [master]
    schedule:
        - cron: '0 16 * * 1'

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout
              uses: actions/checkout@v2

            - name: Setup Node
              uses: actions/setup-node@v1
              with:
                  node-version: 12.x
                  registry-url: https://registry.npmjs.org

            - name: Setup Git
              run: |
                  git config --global user.name "${GITHUB_ACTOR}"
                  git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"

            - name: Update Dependencies
              if: github.event_name == 'schedule'
              run: |
                  rm -rf package-lock.json node_modules
                  npx npm-check-updates -u
                  npm install
                  npm audit fix
                  git add -u :/
                  set +e
                  git commit -m "update dependencies"
                  SKIP=$?
                  echo "::set-env name=SKIP::${SKIP}"

            - name: Install Dependencies
              run: npm ci --no-optional

            - name: Unit Test
              run: npm run test:ci

            - name: Lint Code
              run: npm run lint

            - name: Check Formatting
              run: npm run check

            - name: Build Package
              run: npm run build

            - name: Build Storybook
              run: npm run build:storybook

            - name: SonarCloud Scan
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              uses: sonarsource/sonarcloud-github-action@master
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

            - name: Tag Release
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: |
                  npm version patch
                  VERSION=v`cat package.json | jq -r .version`
                  git push
                  git push origin $VERSION

            - name: Publish Package
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              run: npm publish --access public
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

            - name: Deploy Storybook
              if: github.event_name != 'pull_request' && env.SKIP != '1'
              uses: peaceiris/actions-gh-pages@v3
              with:
                  github_token: ${{ secrets.GITHUB_TOKEN }}
                  publish_dir: ./storybook-static
